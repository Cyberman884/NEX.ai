import { useState, useEffect } from "react";
import { Link, useLocation } from "wouter";
import { motion } from "framer-motion";
import { Zap, Menu, X } from "lucide-react";
import { Button } from "@/components/ui/button";

export default function Navigation() {
  const [location] = useLocation();
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 100);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const navItems = [
    { href: "/", label: "Home" },
    { href: "/about", label: "About" },
    { href: "/pricing", label: "Pricing" },
    { href: "/terms", label: "Terms" },
    { href: "/refund-policy", label: "Refund Policy" },
    { href: "/privacy", label: "Privacy" },
  ];

  return (
    <motion.nav
      initial={{ y: -100 }}
      animate={{ y: 0 }}
      className={`fixed top-0 left-0 right-0 z-50 px-6 py-4 transition-all duration-300 ${
        isScrolled ? "glass-nav backdrop-blur-xl" : "bg-transparent"
      }`}
    >
      <div className="max-w-7xl mx-auto flex items-center justify-between">
        <Link href="/">
          <motion.div
            whileHover={{ scale: 1.05 }}
            className="flex items-center space-x-2 cursor-pointer"
          >
            <Zap className="text-2xl text-blue-500" />
            <span className="text-2xl font-bold text-slate-900">Nex</span>
          </motion.div>
        </Link>

        {/* Desktop Navigation */}
        <div className="hidden md:flex items-center space-x-8">
          {navItems.map((item) => (
            <Link key={item.href} href={item.href}>
              <motion.a
                whileHover={{ y: -2 }}
                className={`font-medium transition-colors duration-300 cursor-pointer ${
                  location === item.href
                    ? "text-blue-500"
                    : "text-slate-900 hover:text-blue-500"
                }`}
              >
                {item.label}
              </motion.a>
            </Link>
          ))}
        </div>

        {/* Mobile Menu Button */}
        <Button
          variant="ghost"
          size="icon"
          className="md:hidden"
          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
        >
          {isMobileMenuOpen ? <X /> : <Menu />}
        </Button>
      </div>

      {/* Mobile Menu */}
      {isMobileMenuOpen && (
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0, y: -20 }}
          className="md:hidden mt-4 glass-card rounded-2xl p-6"
        >
          <div className="space-y-4">
            {navItems.map((item) => (
              <Link key={item.href} href={item.href}>
                <motion.a
                  whileHover={{ x: 10 }}
                  className={`block font-medium transition-colors duration-300 cursor-pointer ${
                    location === item.href
                      ? "text-blue-500"
                      : "text-slate-900 hover:text-blue-500"
                  }`}
                  onClick={() => setIsMobileMenuOpen(false)}
                >
                  {item.label}
                </motion.a>
              </Link>
            ))}
          </div>
        </motion.div>
      )}
    </motion.nav>
  );
}
